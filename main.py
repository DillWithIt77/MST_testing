import mst_testing as mst
import numpy as np


def main():
    B_3 = np.array([[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],
                [0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[1,0,1,0,0,0,0,0],[1,1,0,0,0,0,0,0],
                [0,0,1,1,0,0,0,0],[0,0,1,0,1,0,0,0],[0,0,0,1,1,1,0,0],[0,0,0,0,0,1,1,0],[0,0,0,0,0,0,1,1],
                [1,0,0,0,0,0,0,1],[0,0,0,0,1,0,1,0],[1,0,1,1,0,0,0,0],[1,0,1,0,1,0,0,0],[1,1,1,0,0,0,0,0],
                [0,0,1,1,1,1,0,0],[0,0,1,0,1,0,1,0],[0,0,0,1,1,1,1,0],[0,0,0,0,1,0,1,1],[0,0,0,0,0,1,1,1],
                [1,0,1,1,1,1,0,0],[1,1,1,1,0,0,0,0],[0,0,1,1,1,1,1,0],[0,0,0,1,1,1,1,1],[1,0,1,1,1,1,1,0],
                [1,1,1,1,1,1,0,0],[0,0,1,1,1,1,1,1],[1,1,1,1,0,0,1,1],[1,1,1,0,1,0,1,1],[1,1,0,0,0,1,1,1],
                [0,1,0,1,1,1,1,1]])
    # print('Start Naive Enumeration')
    # init_ciruits = mst.enumerate_circuits(B_3)
    # print('End Naive Enumeration')
    print('Start Polyhedral Model')
    circuits = mst.poly_circs(B_3)
    print('End Polyhedral Model')


    # np.savetxt('naive_circs.txt', a, fmt='%d')
    np.savetxt('poly_circs.txt', circuits, fmt='%d')
    print('Circuits Saved')



if __name__ == "__main__":   
    main()